networks:
  banking-ledger-network:

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - banking-ledger-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka-1:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-1
    depends_on:
      - zookeeper
    ports:
      # - "9092:9092"
      - "19092:19092"
    networks:
      - banking-ledger-network
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTER://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:19092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,PLAINTEXT_INTER://kafka-1:29092,PLAINTEXT_HOST://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 5s
      timeout: 10s
      retries: 10

  kafka-2:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-2
    depends_on:
      - zookeeper
    ports:
      # - "9093:9093"
      - "19093:19093"
    networks:
      - banking-ledger-network
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093,PLAINTEXT_INTER://0.0.0.0:29093,PLAINTEXT_HOST://0.0.0.0:19093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9093,PLAINTEXT_INTER://kafka-2:29093,PLAINTEXT_HOST://localhost:19093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9093"]
      interval: 5s
      timeout: 10s
      retries: 10
  
  kafka-3:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-3
    depends_on:
      - zookeeper
    ports:
      # - "9094:9094"
      - "19094:19094"
    networks:
      - banking-ledger-network
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9094,PLAINTEXT_INTER://0.0.0.0:29094,PLAINTEXT_HOST://0.0.0.0:19094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:9094,PLAINTEXT_INTER://kafka-3:29094,PLAINTEXT_HOST://localhost:19094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9094"]
      interval: 5s
      timeout: 10s
      retries: 10

  postgres:
    image: postgres:15-bullseye
    ports:
      - "5432:5432"
    networks:
      - banking-ledger-network
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: banking_account_db
    volumes:
      - ./postgres_db/:/docker-entrypoint-initdb.d/
      - postgres_data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          memory: "2g"
        reservations:
          memory: "512m"

  mongo:
    image: mongo:6.0.3
    ports:
      - "27017:27017"
    networks:
      - banking-ledger-network
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo 
      MONGO_INITDB_ROOT_PASSWORD: mongo
      MONGO_INITDB_DATABASE: banking_ledger_db
    volumes:
      - mongodb_data:/data/db
      - ./mongo_db/:/docker-entrypoint-initdb.d/

  nginx:
    image: nginx:latest
    ports:
      - "8000:8000"
    networks:
      - banking-ledger-network
    depends_on:
      - account-service
      - transaction-service
      # - ledger-service
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf

  account-service:
    build:
      context: ./services/account
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    networks:
      - banking-ledger-network
    depends_on:
      postgres:
        condition: service_started
      kafka-1:
        condition: service_healthy
      kafka-2:
        condition: service_healthy
      kafka-3:
        condition: service_healthy
    environment:
      ACCOUNT_SERVICE_PORT: "8001"
      ACCOUNT_SERVICE_LOG_LEVEL: debug
      POSTGRES_CONNECTION_STRING: postgres://postgres:postgres@postgres:5432/banking_account_db
      SCHEMA_REGISTRY_URL: http://schema-registry:8081
      API_AUTH_USERNAME: "test"
      API_AUTH_PASSWORD: "test" 
      KAFKA_BROKERS: kafka-1:9092,kafka-2:9093,kafka-3:9094

  transaction-service:
    build:
      context: ./services/transaction
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    networks:
      - banking-ledger-network
    depends_on:
      kafka-1:
        condition: service_healthy
      kafka-2:
        condition: service_healthy
      kafka-3:
        condition: service_healthy
      account-service:
        condition: service_started
    environment:
      TRANSACTION_SERVICE_PORT: "8002"
      TRANSACTION_SERVICE_LOG_LEVEL: debug
      API_AUTH_USERNAME: "test"
      API_AUTH_PASSWORD: "test"
      ACCOUNT_SERVICE_URL: "http://account-service:8001"
      KAFKA_BROKERS: kafka-1:9092,kafka-2:9093,kafka-3:9094

  transaction-processor:
    build:
      context: ./services/transaction-processor
      dockerfile: Dockerfile
    depends_on:
      kafka-1:
        condition: service_healthy
      kafka-2:
        condition: service_healthy
      kafka-3:
        condition: service_healthy
      account-service:
        condition: service_started
    ports:
      - "8003:8003"
    networks:
      - banking-ledger-network
    environment:
      PROCESSOR_SERVICE_PORT: 8003
      PROCESSOR_SERVICE_LOG_LEVEL: debug
      KAFKA_BROKERS: kafka-1:9092,kafka-2:9093,kafka-3:9094

  ledger-service:
    build:
      context: ./services/ledger
      dockerfile: Dockerfile
    depends_on:
      kafka-1:
        condition: service_healthy
      kafka-2:
        condition: service_healthy
      kafka-3:
        condition: service_healthy
      mongo:
       condition: service_started
      transaction-processor:
        condition: service_started
    ports:
      - "8004:8004"
    environment:
      LEDGER_SERVICE_PORT: 8004
      LEDGER_SERVICE_LOG_LEVEL: debug
      MONGODB_CONNECTION_STRING: mongodb://ledger:ledger@localhost:27017/banking_ledger_db
      KAFKA_BROKERS: kafka-1:9092,kafka-2:9093,kafka-3:9094
      API_AUTH_USERNAME: test
      API_AUTH_PASSWORD: test

volumes:
  postgres_data:
  mongodb_data: