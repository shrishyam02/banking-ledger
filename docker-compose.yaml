networks:
  banking-ledger-network:

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema-registry
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092,PLAINTEXT_INTERNAL://kafka:19092
      SCHEMA_REGISTRY_DEBUG: 'true'

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "19092:19092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_INTERNAL://kafka:19092,
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      #KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      #KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,INTERNAL://0.0.0.0:29092,EXTERNAL_PLAINTEXT://0.0.0.0:9094
      #KAFKA_CREATE_TOPICS: "transaction_logs:1:1, account_creation:1:1, account_updates:1:1" # Create topics

  postgres:
    image: postgres:15-bullseye
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: banking_account_db
    volumes:
      - ./postgres_db/:/docker-entrypoint-initdb.d/
      - postgres_data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          memory: "2g"
        reservations:
          memory: "512m"

  mongo:
    image: mongo:6.0.3
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo 
      MONGO_INITDB_ROOT_PASSWORD: mongo
      MONGO_INITDB_DATABASE: banking_ledger_db
    volumes:
      - mongo_data:/data/db
      - ./mongo_db/:/docker-entrypoint-initdb.d/

  nginx:
    image: nginx:latest
    ports:
      - "8000:8000"
    networks:
      - banking-ledger-network
    # depends_on:
      # - account-service
      # - ledger-service
      # - transaction-processor
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf

  # account-service:
  #   build:
  #     context: ./services/account
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - kafka
  #     - postgres
  #   environment:
  #     POSTGRES_CONNECTION_STRING: "postgres://your_user:your_password@postgres:5432/banking_ledger_db?sslmode=disable"
  #     KAFKA_BROKERS: kafka:9092  # Important!
  #     # ... other environment variables

  # ledger-service:
  #   build:
  #     context: ./services/ledger
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - kafka
  #     - mongo
  #   environment:
  #     MONGO_URI: "mongodb://mongo:27017/banking_ledger_db"
  #     KAFKA_BROKERS: kafka:9092  # Important!
  #     # ... other environment variables

  # transaction-processor:
  #   build:
  #     context: ./services/transaction
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - kafka
  #     - postgres
  #     - mongo
  #   environment:
  #     POSTGRES_CONNECTION_STRING: "postgres://your_user:your_password@postgres:5432/banking_ledger_db?sslmode=disable"
  #     MONGO_URI: "mongodb://mongo:27017/banking_ledger_db"
  #     KAFKA_BROKERS: kafka:9092  # Important!
  #     # ... other environment variables

volumes:
  postgres_data:
  mongo_data: